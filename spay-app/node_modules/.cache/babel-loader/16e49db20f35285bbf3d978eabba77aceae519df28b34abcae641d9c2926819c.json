{"ast":null,"code":"var _jsxFileName = \"/Users/drewbar/Desktop/SPAY2/Spay/spay-app/src/components/User2.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport '../User2.css'; // Ensure this CSS file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User2({\n  first_name,\n  last_name,\n  balance,\n  stocks\n}) {\n  // Constructing the full name from props\n  const fullName = `${first_name} ${last_name}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"user-name\",\n      children: fullName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"account-balance\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"balance-amount\",\n        children: balance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stocks-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"stocks-title\",\n        children: \"Your Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stocks-container\",\n        children: stocks.length > 0 ? stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ticker\",\n              children: stock.ticker || stock.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 37\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-price\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quantity\",\n                children: [\"Recommended Quantity: \", stock.recommended_quantity || stock.quantity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 41\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quantity-price\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"current-price\",\n                children: [\"Expected Price: $\", stock.expected_price ? stock.expected_price.toFixed(2) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 41\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-value\",\n            children: [\"Total Value: $\", stock.total_value ? stock.total_value.toFixed(2) : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No recommendations available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n// PropTypes to ensure correct prop types\n_c = User2;\nUser2.propTypes = {\n  first_name: PropTypes.string.isRequired,\n  last_name: PropTypes.string.isRequired,\n  balance: PropTypes.string.isRequired,\n  stocks: PropTypes.arrayOf(PropTypes.shape({\n    ticker: PropTypes.string,\n    // If ticker is not available, adjust based on your data\n    name: PropTypes.string,\n    // Assuming a name field might exist\n    expected_price: PropTypes.number,\n    // Change based on your actual response field\n    recommended_quantity: PropTypes.number,\n    // Change based on your actual response field\n    total_value: PropTypes.number // Total value of the recommendation\n  })).isRequired\n};\nexport default User2;\nvar _c;\n$RefreshReg$(_c, \"User2\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","User2","first_name","last_name","balance","stocks","fullName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","stock","index","ticker","name","recommended_quantity","quantity","expected_price","toFixed","total_value","_c","propTypes","string","isRequired","arrayOf","shape","number","$RefreshReg$"],"sources":["/Users/drewbar/Desktop/SPAY2/Spay/spay-app/src/components/User2.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../User2.css'; // Ensure this CSS file exists\n\nfunction User2({ first_name, last_name, balance, stocks }) {\n    // Constructing the full name from props\n    const fullName = `${first_name} ${last_name}`;\n\n    return (\n        <div className=\"user-container\">\n            <h1 className=\"user-name\">{fullName}</h1>\n            <p className=\"account-balance\">\n                <span className=\"balance-amount\">{balance}</span>\n            </p>\n            <div className=\"stocks-list\">\n                <h2 className=\"stocks-title\">Your Recommendations</h2>\n                <div className=\"stocks-container\">\n                    {stocks.length > 0 ? (\n                        stocks.map((stock, index) => (\n                            <div key={index} className=\"stock-card\">\n                                <div className=\"stock-info\">\n                                    <span className=\"ticker\">{stock.ticker || stock.name}</span> {/* Use ticker or name depending on your data structure */}\n                                    <div className=\"quantity-price\">\n                                        <span className=\"quantity\">Recommended Quantity: {stock.recommended_quantity || stock.quantity}</span> {/* Assuming these are keys in your recInfo */}\n                                    </div>\n                                    <div className=\"quantity-price\">\n                                        <span className=\"current-price\">Expected Price: ${stock.expected_price ? stock.expected_price.toFixed(2) : 'N/A'}</span> {/* Modify based on your data structure */}\n                                    </div>\n                                </div>\n                                <div className=\"total-value\">\n                                    Total Value: ${stock.total_value ? stock.total_value.toFixed(2) : 'N/A'}\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        <p>No recommendations available.</p>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\n// PropTypes to ensure correct prop types\nUser2.propTypes = {\n    first_name: PropTypes.string.isRequired,\n    last_name: PropTypes.string.isRequired,\n    balance: PropTypes.string.isRequired,\n    stocks: PropTypes.arrayOf(\n        PropTypes.shape({\n            ticker: PropTypes.string, // If ticker is not available, adjust based on your data\n            name: PropTypes.string, // Assuming a name field might exist\n            expected_price: PropTypes.number, // Change based on your actual response field\n            recommended_quantity: PropTypes.number, // Change based on your actual response field\n            total_value: PropTypes.number, // Total value of the recommendation\n        })\n    ).isRequired,\n};\n\nexport default User2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}